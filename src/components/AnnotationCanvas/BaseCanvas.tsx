// Generated by Copilot
import { Dispatch, ReactNode, RefObject, SetStateAction } from "react";
import Loader from "../loader";
import { ApiImage } from "./api";
import TabNavigation from "./TabNavigation";
import { SaveSatues, Tab } from "./types";

interface BaseCanvasProps {
  image: ApiImage;
  state: {
    tabs: Tab[];
    selectedTab: number;
    canvasSaveStatus: SaveSatues;
    imgDim: { width: number; height: number } | null;
    isLoading: boolean;
  };
  refs: {
    overlayRef: RefObject<HTMLCanvasElement>;
  };
  actions: {
    setTabs: Dispatch<SetStateAction<Tab[]>>;
    setSelectedTab: (index: number) => void;
    setIsLoading: Dispatch<SetStateAction<boolean>>;
  };
  toolbar: ReactNode; // Made optional
  children: ReactNode;
}

export default function BaseCanvas({
  image,
  state,
  refs,
  actions,
  toolbar,
  children,
}: BaseCanvasProps) {
  if (state.isLoading || !state.imgDim) {
    return <Loader message="Loading canvas data..." />;
  }

  if (state.tabs.length === 0 || state.selectedTab === -1) {
    return null;
  }

  return (
    <>
      <TabNavigation
        tabs={state.tabs}
        selectedTab={state.selectedTab}
        setSelectedTab={actions.setSelectedTab}
        setTabs={actions.setTabs}
        overlayRef={refs.overlayRef}
        isMarkingAllDone={state.canvasSaveStatus.isMarkingAllDone}
      />
      {toolbar}
      <div className="canvas-container">
        <div className="image-container">
          <img src={image.src} alt={image.filename} />
          {children}
        </div>
      </div>
    </>
  );
}
