"use client";
import { useAnnotationContext } from "@/contexts/AnnotationContext";

// Generated by Copilot
export default function TabNavigation() {
  const {
    states: {
      tabs,
      selectedTab,
      saveStatus: { isMarkingDone },
      showOtherFeatures,
    },
    actions: { setSelectedTab, setShowOtherFeatures },
  } = useAnnotationContext();

  return (
    <nav className="tabs" role="tablist" aria-label="Features navigation">
      <div className="tab-scroll-container">
        <div className="tab-buttons">
          {tabs.map((tab, index) => {
            const isSelected = selectedTab === index;
            const isProcessing =
              tabs[selectedTab].feature_id === tab.feature_id && isMarkingDone;

            return (
              <button
                key={index}
                role="tab"
                aria-selected={isSelected}
                aria-controls={`panel-${index}`}
                className={`tab-button ${isSelected ? "active" : ""} ${
                  isProcessing ? "is-processing" : ""
                }`}
                onClick={() => setSelectedTab(index)}
              >
                <span className="tab-content">
                  <span className="tab-name">{tab.name}</span>
                </span>
              </button>
            );
          })}
        </div>
      </div>

      <button
        className="px-3 py-1 ml-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        onClick={() => setShowOtherFeatures((prev) => !prev)}
      >
        {showOtherFeatures ? "Hide" : "Show"} Other Features
      </button>
    </nav>
  );
}
