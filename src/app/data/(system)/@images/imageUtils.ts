// Generated by Copilot
import { ApiImage } from "@/components/AnnotationCanvas/api";

/**
 * Formats an image object from the API response for display
 */
export const formatImageForDisplay = (
  image: ApiImage
): ApiImage & { mimetype: string; displayName: string } => {
  return {
    ...image,
    displayName: image.filename.split(".")[0] || "Unnamed Image",
    mimetype: image.src.split(":")[1]?.split(";")[0] || "image/jpeg",
  };
};

/**
 * Validates a file before upload
 * @returns An error message if validation fails, null if valid
 */
export const validateImageFile = (file: File): string | null => {
  // Check file size (limit to 10MB)
  const maxSize = 10 * 1024 * 1024; // 10MB
  if (file.size > maxSize) {
    return `File size exceeds the 10MB limit. Please upload a smaller image.`;
  }

  // Check file type
  if (!file.type.startsWith("image/")) {
    return "Only image files are allowed.";
  }

  return null; // File is valid
};

/**
 * Parses API error messages
 */
export const parseApiError = (error: any): string => {
  if (error instanceof Error) {
    if (error.message.includes("413")) {
      return "Image is too large for the server to process";
    } else if (error.message.includes("415")) {
      return "Unsupported image format";
    } else if (error.message.includes("network")) {
      return "Network error. Please check your connection";
    } else {
      return `Upload failed: ${error.message}`;
    }
  }
  return "Failed to process request";
};
